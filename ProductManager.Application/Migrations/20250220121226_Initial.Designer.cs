// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManager.Application.Models;

#nullable disable

namespace ProductManager.Application.Migrations
{
    [DbContext(typeof(PredpriyatieDBContext))]
    [Migration("20250220121226_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.Category", b =>
                {
                    b.Property<long?>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.OptionalParameter", b =>
                {
                    b.Property<long>("OptionalParameterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OptionalParameterID"));

                    b.Property<string>("OptionalParameterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionalParameterType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PricelistOptionalParameterOptionalParameterEntryID")
                        .HasColumnType("bigint");

                    b.HasKey("OptionalParameterID");

                    b.HasIndex("PricelistOptionalParameterOptionalParameterEntryID");

                    b.ToTable("OptionalParameters");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.Pricelist", b =>
                {
                    b.Property<long>("PricelistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PricelistId"));

                    b.Property<DateTime>("PriceListDateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("PricelistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PricelistId");

                    b.ToTable("Pricelists");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.PricelistOptionalParameter", b =>
                {
                    b.Property<long>("OptionalParameterEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OptionalParameterEntryID"));

                    b.Property<long>("OptionalParameterID")
                        .HasColumnType("bigint");

                    b.Property<string>("OptionalParameterValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PricelistID")
                        .HasColumnType("bigint");

                    b.HasKey("OptionalParameterEntryID");

                    b.HasIndex("PricelistID");

                    b.ToTable("PricelistOptionalParameters");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.PricelistProductPurchase", b =>
                {
                    b.Property<long>("PurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PurchaseID"));

                    b.Property<long>("PricelistID")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<float>("ProductQuantity")
                        .HasColumnType("real");

                    b.HasKey("PurchaseID");

                    b.HasIndex("PricelistID");

                    b.HasIndex("ProductID");

                    b.ToTable("PricelistProductPurchases");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.Product", b =>
                {
                    b.Property<long?>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ProductID"));

                    b.Property<long?>("CategoryID")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.OptionalParameter", b =>
                {
                    b.HasOne("ProductManager.Application.Models.DBEntities.PricelistOptionalParameter", "PricelistOptionalParameter")
                        .WithMany("OptionalParameters")
                        .HasForeignKey("PricelistOptionalParameterOptionalParameterEntryID");

                    b.Navigation("PricelistOptionalParameter");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.PricelistOptionalParameter", b =>
                {
                    b.HasOne("ProductManager.Application.Models.DBEntities.Pricelist", "Pricelist")
                        .WithMany("PricelistOptionalParameters")
                        .HasForeignKey("PricelistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pricelist");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.PricelistProductPurchase", b =>
                {
                    b.HasOne("ProductManager.Application.Models.DBEntities.Pricelist", "Pricelist")
                        .WithMany("PricelistProductPurchases")
                        .HasForeignKey("PricelistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManager.Application.Models.DBEntities.Product", "Product")
                        .WithMany("PricelistProductPurchases")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pricelist");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.Product", b =>
                {
                    b.HasOne("ProductManager.Application.Models.DBEntities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.Pricelist", b =>
                {
                    b.Navigation("PricelistOptionalParameters");

                    b.Navigation("PricelistProductPurchases");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.PricelistOptionalParameter", b =>
                {
                    b.Navigation("OptionalParameters");
                });

            modelBuilder.Entity("ProductManager.Application.Models.DBEntities.Product", b =>
                {
                    b.Navigation("PricelistProductPurchases");
                });
#pragma warning restore 612, 618
        }
    }
}
